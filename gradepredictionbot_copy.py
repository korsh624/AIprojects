import telebot
from telebot import types
from getdf import coder, getDF, getRatingSt

token = '5077133016:AAFeAjz4GDOe_39siIkaenFULthrEQ07YLY'
bot = telebot.TeleBot(token)
answers = []

def req(l: list):
    result = coder(l)
    print(result)
    result = getDF(result)
    result = getRatingSt(result)
    return result

@bot.message_handler(commands=['start'])
def start_message(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    start_button = types.KeyboardButton("–°—Ç–∞—Ä—Ç")
    keyboard.add(start_button)
    
    bot.send_message(message.chat.id, 'üëã–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–°—Ç–∞—Ä—Ç", —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.', reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text == "–°—Ç–∞—Ä—Ç")
def handle_start_button(message):
    bot.send_message(message.chat.id, 'üîÆ–Ø –º–æ–≥—É –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å —Ç–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞ —ç—Ç–æ—Ç —Å–µ–º–µ—Å—Ç—Ä. ‚úç–û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã. –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')
    bot.register_next_step_handler(message, get_age)

def get_age(message):
    # print(*l)
    try:
        age = int(message.text)
        if age < 7 or age > 25:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –æ—Ç 7 –¥–æ 25 –ª–µ—Ç.')
            bot.register_next_step_handler(message, get_age)
        else:
            answers.append(age)
            bot.send_message(message.chat.id, f'–û—Ç–ª–∏—á–Ω–æ! –¢–µ–±–µ {age} –ª–µ—Ç. –î–∞–ª—å—à–µ; –∫–∞–∫–æ–π —É —Ç–µ–±—è –ø–æ–ª? (–≤–≤–µ–¥–∏—Ç–µ "–º—É–∂—Å–∫–æ–π" –∏–ª–∏ "–∂–µ–Ω—Å–∫–∏–π")')
            bot.register_next_step_handler(message, get_gender)
    except ValueError:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (—á–∏—Å–ª–æ).')
        bot.register_next_step_handler(message, get_age)

def get_gender(message):
    # print(*l)
    gender = message.text.lower() 
    if gender not in ['–º—É–∂—Å–∫–æ–π', '–∂–µ–Ω—Å–∫–∏–π']:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ "–º—É–∂—Å–∫–æ–π" –∏–ª–∏ "–∂–µ–Ω—Å–∫–∏–π".')
        bot.register_next_step_handler(message, get_gender)
    else:
        answers.append(gender)
        bot.send_message(message.chat.id, f'–•–æ—Ä–æ—à–æ! –¢—ã —É–∫–∞–∑–∞–ª, —á—Ç–æ —Ç–≤–æ–π –ø–æ–ª: {gender}. –ö–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —É —Ç–≤–æ–∏—Ö —Ä–æ–¥–∏—Ç–µ–ª–µ–π? (–≤–≤–µ–¥–∏—Ç–µ: –ù–µ—Ç, –°—Ä–µ–¥–Ω—è—è —à–∫–æ–ª–∞, –ö–æ–ª–ª–µ–¥–∂, –ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç, –í—ã—Å—à–µ–µ)')
        bot.register_next_step_handler(message, get_parental_education)

def get_parental_education(message):
    # print(*l)
    get_parental_education = message.text.lower()
    valid_education = ['–Ω–µ—Ç', '—Å—Ä–µ–¥–Ω—è—è —à–∫–æ–ª–∞', '–Ω–µ–º–Ω–æ–≥–æ –∫–æ–ª–ª–µ–¥–∂–∞', '–±–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç', '–≤—ã—Å—à–µ–µ']
    if get_parental_education not in valid_education:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è.')
        bot.register_next_step_handler(message, get_parental_education)
    else:
        answers.append(get_parental_education)
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –¢—ã —É–∫–∞–∑–∞–ª(–∞) —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π. ‚åõ–°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é —Ç—ã —É—á–∏—à—å—Å—è? (–≤–≤–µ–¥–∏—Ç–µ –æ—Ç 0 –¥–æ 40)')
        bot.register_next_step_handler(message, get_study_time)

def get_study_time(message):
    # print(*l)
    try:
        study_time = float(message.text)
        if study_time < 0 or study_time > 40:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è –æ—Ç 0 –¥–æ 40 —á–∞—Å–æ–≤.')
            bot.register_next_step_handler(message, get_study_time)
        else:
            answers.append(study_time)
            bot.send_message(message.chat.id, f'–•–æ—Ä–æ—à–æ! –¢—ã —É–∫–∞–∑–∞–ª(–∞), —á—Ç–æ —Ç—ã —É—á–∏—à—å—Å—è {study_time} —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é. –°–∫–æ–ª—å–∫–æ –ø—Ä–æ–ø—É—Å–∫–æ–≤ —É —Ç–µ–±—è –±—ã–ª–æ –≤ —ç—Ç–æ–º –≥–æ–¥—É? (–≤–≤–µ–¥–∏—Ç–µ –æ—Ç 0 –¥–æ 30)')
            bot.register_next_step_handler(message, get_skips)
    except ValueError:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ (—á–∏—Å–ª–æ).')
        bot.register_next_step_handler(message, get_study_time)

def get_skips(message):
    # print(*l)
    try:
        skips = int(message.text)
        if skips < 0 or skips > 30:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—Å–∫–æ–≤ –æ—Ç 0 –¥–æ 30.')
            bot.register_next_step_handler(message, get_skips)
        else:
            answers.append(skips)
            bot.send_message(message.chat.id, f'–•–æ—Ä–æ—à–æ! –¢—ã —É–∫–∞–∑–∞–ª(–∞), —á—Ç–æ —É —Ç–µ–±—è –±—ã–ª–æ {skips} –ø—Ä–æ–ø—É—Å–∫–∞(–æ–≤) –≤ —ç—Ç–æ–º –≥–æ–¥—É. üë©‚Äçüè´ –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—Å—Ç–≤–æ? (–≤–≤–µ–¥–∏—Ç–µ "–¥–∞" –∏–ª–∏ "–Ω–µ—Ç")')
            bot.register_next_step_handler(message, get_repetitorstvo)
    except ValueError:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—Å–∫–æ–≤ (—á–∏—Å–ª–æ).')
        bot.register_next_step_handler(message, get_skips)

def get_repetitorstvo(message):
    # print(*l)
    repetitorstvo = message.text.lower()
    if repetitorstvo not in ['–¥–∞', '–Ω–µ—Ç']:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ "–¥–∞" –∏–ª–∏ "–Ω–µ—Ç".')
        bot.register_next_step_handler(message, get_repetitorstvo)
    else:
        answers.append(repetitorstvo)
        bot.send_message(message.chat.id, f'–°–ø–∞—Å–∏–±–æ! –¢—ã —É–∫–∞–∑–∞–ª(–∞) —Å–≤–æ—ë —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—Å—Ç–≤–æ. üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –ª–∏ —Ç–µ–±—è —Ä–æ–¥–∏—Ç–µ–ª–∏? (–≤–≤–µ–¥–∏—Ç–µ: –Ω–∏–∑–∫–∞—è, —É–º–µ—Ä–µ–Ω–Ω–∞—è, –≤—ã—Å–æ–∫–∞—è, –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è.)')
        bot.register_next_step_handler(message, get_parental_support)

def get_parental_support(message):
    # print(*l)
    support = message.text.lower()
    if support not in ['–Ω–∏–∑–∫–∞—è', '—É–º–µ—Ä–µ–Ω–Ω–∞—è', '–≤—ã—Å–æ–∫–∞—è', '–æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è']:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ä–æ–¥–∏—Ç–µ–ª–µ–π.')
        bot.register_next_step_handler(message, get_parental_support)
    else:
        answers.append(support)
        bot.send_message(message.chat.id, f'–°–ø–∞—Å–∏–±–æ! –¢—ã —É–∫–∞–∑–∞–ª(–∞) —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ä–æ–¥–∏—Ç–µ–ª–µ–π. –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª —Ç–≤–æ–∏—Ö —Ç–µ–∫—É—â–∏—Ö –æ—á–µ–Ω–æ–∫. –ù–∞–ø—Ä–∏–º–µ—Ä 4.3')
        print(answers)
        bot.register_next_step_handler(message, get_gpa)

def get_gpa(message):
    try:
        gpa = float(message.text)
        if gpa < 0 or gpa > 5:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ 0 –¥–æ 5.')
            bot.register_next_step_handler(message, get_gpa)
        else:
            answers.append(gpa)
            bot.send_message(message.chat.id, f'–•–æ—Ä–æ—à–æ! –¢—ã —É–∫–∞–∑–∞–ª(–∞), —á—Ç–æ —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª —Ç–≤–æ–∏—Ö –æ—Ü–µ–Ω–æ–∫ {gpa}')
            answer = req(answers)
            bot.send_message(message.chat.id, f'–û—Ç–ª–∏—á–Ω–æ! –¢–≤–æ—è –æ—Ü–µ–Ω–∫–∞: {5-float(answer[0][0])}')
    except ValueError:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—Å–∫–æ–≤ (—á–∏—Å–ª–æ).')
        bot.register_next_step_handler(message, get_gpa)

bot.polling()
#–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞